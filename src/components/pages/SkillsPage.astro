---
import { useTranslations } from '../../i18n/utils';

export interface Props {
  lang: 'es' | 'en';
}

const { lang } = Astro.props;
const t = useTranslations(lang);

const primarySkills = [
  {
    name: "C#",
    category: lang === 'es' ? "Backend" : "Backend",
    level: lang === 'es' ? "Intermedio" : "Intermediate",
    color: "from-purple-500 to-purple-700",
    icon: "csharp",
  },
  {
    name: "Tailwind CSS",
    category: "Frontend",
    level: lang === 'es' ? "Intermedio" : "Intermediate",
    color: "from-cyan-400 to-cyan-600",
    icon: "tailwindcss",
  },
  {
    name: "Python",
    category: "Backend",
    level: lang === 'es' ? "Intermedio" : "Intermediate",
    color: "from-yellow-400 to-green-600",
    icon: "python",
  },
  {
    name: "Docker",
    category: "DevOps",
    level: lang === 'es' ? "Básico" : "Basic",
    color: "from-blue-400 to-blue-700",
    icon: "docker",
  },
  {
    name: "Azure",
    category: "Cloud",
    level: lang === 'es' ? "Intermedio" : "Intermediate",
    color: "from-green-400 to-green-600",
    icon: "azure",
  },
  {
    name: "JavaScript",
    category: "Frontend",
    level: lang === 'es' ? "Intermedio" : "Intermediate",
    color: "from-yellow-400 to-yellow-600",
    icon: "javascript",
  },
  {
    name: "SQL",
    category: "Database",
    level: lang === 'es' ? "Intermedio" : "Intermediate",
    color: "from-red-500 to-red-700",
    icon: "sql-server",
  },
  {
    name: "Git",
    category: lang === 'es' ? "Herramientas" : "Tools",
    level: lang === 'es' ? "Avanzado" : "Advanced",
    color: "from-orange-500 to-red-600",
    icon: "git",
  },
  {
    name: "React",
    category: "Frontend",
    level: lang === 'es' ? "Básico" : "Basic",
    color: "from-blue-500 to-blue-700",
    icon: "react_dark",
  },
  {
    name: "Astro",
    category: "Frontend",
    level: lang === 'es' ? "Básico" : "Basic",
    color: "from-blue-500 to-blue-700",
    icon: "astro",
  },
];

const languages = [
  { 
    name: lang === 'es' ? "Español" : "Spanish", 
    level: lang === 'es' ? "Nativo" : "Native" 
  },
  { 
    name: lang === 'es' ? "Inglés" : "English", 
    level: "B2 - Upper Intermediate" 
  },
];

const softSkills = lang === 'es' ? [
  "Resolución de Problemas",
  "Trabajo en Equipo", 
  "Comunicación",
  "Aprendizaje Rápido",
  "Adaptabilidad",
  "Pensamiento Crítico",
  "Responsabilidad",
  "Creatividad",
  "Liderazgo",
  "Empatía",
  "Organización",
  "Gestión del Tiempo",
] : [
  "Problem Solving",
  "Teamwork",
  "Communication", 
  "Fast Learning",
  "Adaptability",
  "Critical Thinking",
  "Responsibility",
  "Creativity",
  "Leadership",
  "Empathy",
  "Organization",
  "Time Management",
];
---

<main class="min-h-screen px-4 pt-32 pb-20">
  <div class="max-w-6xl mx-auto">
    <!-- Header -->
    <div class="text-center mb-16">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        {t.skills.title}
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        {t.skills.subtitle}
      </p>
    </div>

    <!-- Technical Skills Grid -->
    <div class="mb-16">
      <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-8 text-center">
        {lang === 'es' ? 'Tecnologías' : 'Technologies'}
      </h2>
      <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6">
        {primarySkills.map((skill, index) => (
          <div
            class="group p-4 bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 hover:border-blue-400 dark:hover:border-blue-400 transition-all duration-300 hover:scale-105 hover:shadow-lg"
          >
            <div class="text-center">
              <div class="w-12 h-12 mx-auto mb-4 group-hover:scale-110 transition-transform relative">
                {skill.icon ? (
                  <img 
                    src={`https://svgl.app/library/${skill.icon}.svg`}
                    alt={`${skill.name} icon`}
                    class="w-full h-full object-contain filter dark:brightness-110"
                    loading="lazy"
                    onerror="this.style.display='none'; this.nextElementSibling.style.display='flex'"
                  />
                ) : null}
                <!-- Fallback si no hay ícono -->
                <div class={`w-full h-full bg-gradient-to-r ${skill.color} rounded-xl items-center justify-center ${skill.icon ? 'hidden' : 'flex'}`}>
                  <span class="text-white font-bold text-lg">
                    {skill.name.charAt(0)}
                  </span>
                </div>
              </div>
              <h3 class="text-gray-900 dark:text-white font-semibold mb-2 group-hover:text-blue-500 transition-colors">
                {skill.name}
              </h3>
              <div class="flex flex-col gap-2">
                <span class="text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide">
                  {skill.category}
                </span>
                <span
                  class={`text-xs px-2 py-1 rounded-full font-medium ${
                    skill.level === "Avanzado" || skill.level === "Advanced"
                      ? "bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-300"
                      : (skill.level === "Intermedio" || skill.level === "Intermediate")
                        ? "bg-yellow-100 dark:bg-yellow-900/20 text-yellow-700 dark:text-yellow-300"
                        : "bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300"
                  }`}
                >
                  {skill.level}
                </span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Languages -->
    <div class="mb-16">
      <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-8 text-center">
        {lang === 'es' ? 'Idiomas' : 'Languages'}
      </h2>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-3xl mx-auto">
        {languages.map((language, index) => (
          <div class="group bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 hover:border-blue-400 dark:hover:border-blue-400 p-6 rounded-2xl transition-all duration-300 hover:shadow-lg">
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-xl font-semibold text-gray-900 dark:text-white group-hover:text-blue-500 transition-colors">
                {language.name}
              </h3>
              <span class={`text-sm px-3 py-1 rounded-full font-medium ${
                language.level === "Nativo" || language.level === "Native"
                  ? "bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-300" 
                  : "bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300"
              }`}>
                {language.level === "Nativo" || language.level === "Native" ? (lang === 'es' ? "Nativo" : "Native") : "B2"}
              </span>
            </div>
            
            <div class="space-y-3">
              <div class="flex justify-between text-sm text-gray-600 dark:text-gray-400">
                <span>{lang === 'es' ? 'Nivel' : 'Level'}</span>
                <span>{(language.level === "Nativo" || language.level === "Native") ? "100%" : "70%"}</span>
              </div>
              
              <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 overflow-hidden">
                <div 
                  class={`h-2 rounded-full transition-all duration-1000 ease-out ${
                    (language.level === "Nativo" || language.level === "Native")
                      ? "bg-gradient-to-r from-green-400 to-green-500 w-full" 
                      : "bg-gradient-to-r from-blue-400 to-blue-500 w-[70%]"
                  }`}
                />
              </div>
              
              <p class="text-gray-600 dark:text-gray-400 text-sm mt-3">
                {(language.level === "Nativo" || language.level === "Native")
                  ? (lang === 'es' ? "Lengua materna - Dominio completo" : "Native language - Complete mastery")
                  : (lang === 'es' ? "Upper Intermediate - Competencia profesional mínima" : "Upper Intermediate - Minimum professional proficiency")
                }
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Soft Skills -->
    <div class="text-center">
      <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-8">
        {lang === 'es' ? 'Habilidades Blandas' : 'Soft Skills'}
      </h2>
      <div class="flex flex-wrap justify-center gap-3 max-w-4xl mx-auto">
        {softSkills.map((skill, index) => (
          <div class="px-4 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-full text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:border-blue-400 dark:hover:border-blue-400 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition-all duration-300 hover:scale-105">
            {skill}
          </div>
        ))}
      </div>
    </div>
  </div>
</main>
